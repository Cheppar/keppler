{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["Card","_ref","id","name","email","React","createElement","className","alt","src","concat","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","Component","constructor","super","this","state","hasError","componentDidCatch","error","info","setState","render","App","onSearchChange","event","target","value","console","log","componentDidMount","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","document","getElementById"],"mappings":"oMAkBeA,MAhBFC,IAAwB,IAAvB,GAACC,EAAE,KAAEC,EAAI,MAAEC,GAAMH,EAE3B,OACAI,IAAAC,cAAA,OAAKC,UAAU,0DAEbF,IAAAC,cAAA,OAAKE,IAAI,QAAQC,IAAG,wBAAAC,OAA0BR,EAAE,cAChDG,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAKH,GACLE,IAAAC,cAAA,SAAIF,MCcGO,MApBGV,IAAe,IAAd,OAACW,GAAOX,EAIvB,OACJI,IAAAC,cAAA,WAEIM,EAAOC,IAAI,CAACC,EAAMC,IACNV,IAAAC,cAACN,EAAI,CAACgB,IAAKD,EACnBb,GAAIU,EAAOG,GAAGb,GACdC,KAAMS,EAAOG,GAAGZ,KAChBC,MAAOQ,EAAOG,GAAGX,WCCVa,MAdGhB,IAAkC,IAAjC,YAACiB,EAAW,aAAEC,GAAalB,EAE1C,OACII,IAAAC,cAAA,OAAKC,UAAU,OACfF,IAAAC,cAAA,SACIC,UAAU,mCACVa,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCCPI,MATCC,GAGZnB,IAAAC,cAAA,OAAKmB,MAAO,CAACC,SAAU,SAAWC,OAAQ,mBAAqBC,OAAQ,UAClEJ,EAAMK,UCJf,MAAMC,UAAqBC,YACvBC,YAAYR,GACRS,MAAMT,GACNU,KAAKC,MAAQ,CACTC,UAAU,GAIlBC,kBAAkBC,EAAOC,GACrBL,KAAKM,SAAS,CAACJ,UAAU,IAG7BK,SACI,OAAIP,KAAKC,MAAMC,SACJ/B,IAAAC,cAAA,UAAI,mCAER4B,KAAKV,MAAMK,UAMXC,Q,MCXf,MAAMY,UAAYX,YACdC,cACIC,QAAQ,KAeZU,eAAkBC,IACdV,KAAKM,SAAS,CAACtB,YAAa0B,EAAMC,OAAOC,SAfzCZ,KAAKC,MAAQ,CACTvB,OAAQ,GACRM,YAAa,IAEjB6B,QAAQC,IAAI,eAGhBC,oBACIC,MAAM,8CACDC,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,GAASpB,KAAKM,SAAS,CAAC5B,OAAQ0C,KAC1CP,QAAQC,IAAI,qBAOhBP,SACI,MAAM,OAAC7B,EAAM,YAAEM,GAAegB,KAAKC,MAC7BoB,EAAiB3C,EAAO4C,OAAOC,GAC1BA,EAAMtD,KAAKuD,cAAcC,SAASzC,EAAYwC,gBAGzD,OAAQ9C,EAAOgD,OAIPvD,IAAAC,cAAA,WACAD,IAAAC,cAAA,MAAIC,UAAU,MAAK,aACnBF,IAAAC,cAACW,EAAS,CAACE,aAAce,KAAKS,iBAC9BtC,IAAAC,cAACiB,EAAM,KACHlB,IAAAC,cAACwB,EAAY,KACjBzB,IAAAC,cAACK,EAAQ,CAACC,OAAQ2C,OARtBlD,IAAAC,cAAA,UAAI,gBAkBDoC,QClDfmB,IAASpB,OACTpC,IAAAC,cAACoC,EAAG,MACJoB,SAASC,eAAe,U","file":"static/js/main.6824fc5e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({id, name, email}) => {\n    \n    return ( \n    <div className='tc fl bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n       \n      <img alt='robox' src={`https://robohash.org/${id}?200x200`} /> \n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n\n    </div>\n    );\n}\n\n\nexport default Card;","import React from \"react\"\nimport Card from \"./Card\";\nimport { robots } from \"../robots\";\n\nconst CardList =  ({robots}) => {\n\n   \n  \n    return (\n<div> \n{\n    robots.map((user, i ) => {\n        return (<Card key={i} \n        id={robots[i].id} \n        name={robots[i].name} \n        email={robots[i].email\n        } />\n        );\n    })\n}\n</div>\n    );\n}\n\nexport default CardList","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n\n    return (\n        <div className=\"pa2\"> \n        <input \n            className='pa3 ba b--green bg-lightest-blue'\n            type='search' \n            placeholder='Search robots' \n            onChange={searchChange}\n        /> \n    </div>\n    );\n}\n\nexport default SearchBox; ","import React from \"react\";\n\nconst Scroll = (props) => { \n    \n    return  (\n    <div style={{overflow: 'scroll',  border: '5 px solid black' , height: '600px'}}>\n        {props.children}\n    </div>\n        )\n}\n\nexport default Scroll;","import React, { Component } from \"react\";\n\nclass ErrorBoundry extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({hasError: true})\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Opps. Not good for user to see!</h1>\n        }\n        return this.props.children\n    }\n}\n\n\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nimport './App.css';\n\n\n//STATE : describes our application\n//STATE >> props\n\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            robots: [], \n            searchfield: ''\n        }\n        console.log('constructor');\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({robots: users }));\n        console.log('componentDidMount')\n    }\n\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value});\n    }\n\n    render() { \n        const {robots, searchfield} = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        });\n\n        return !robots.length ? \n            <h1>Loading ...</h1> :\n        \n             (\n                <div> \n                <h1 className='f2'>Robo Team</h1>\n                <SearchBox searchChange={this.onSearchChange} />\n                <Scroll> \n                    <ErrorBoundry> \n                <CardList robots={filteredRobots} />\n                </ErrorBoundry>\n                </Scroll>\n                \n                </div>\n            );    \n             } \n        }\n         \n\nexport default App; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'; \nimport App from '../src/containers/App';\n\n\n\nReactDOM.render(\n<App />,\ndocument.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}